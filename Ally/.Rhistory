knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
asd <- readr::read_csv("ASD_meta_abundance_2.csv")
asd
asd_tidy <- asd %>%
pivot_longer(-Taxonomy,
names_to = "subject",
values_to = "abundance") %>%
separate(subject, into = c("group", "number"), sep = 1)
asd_tidy
asd_tidy2 <- asd_tidy %>%
filter(str_detect(Taxonomy, "Unclassified") == FALSE)
asd_tidy2
asd_group <-
asd_tidy2 %>%
filter(group == "A")
asd_group
td_group <-
asd_tidy2 %>%
filter(group == "B")
td_group
knitr::opts_chunk$set(echo = TRUE)
getwd()
library(tidyverse)
library(janitor)
library(here)
library(naniar)
asd_microbiome <- read_csv(here("ASD meta abundance 2.csv"))
asd_microbiome <- janitor::clean_names(asd_microbiome)
names(asd_microbiome)
asd_microbiome
asd_microbiome_longer <- asd_microbiome %>%
pivot_longer(-taxonomy, names_to = "condition", values_to = "abundance")
asd_microbiome_longer
asd_microbiome_tidy <- asd_microbiome_longer %>%
separate(condition, into = c("condition", "patient_id"), sep = 1) %>%
separate(taxonomy, into = c("genus", "species"), sep = ";") %>%
separate(genus, into = c("trash", "genus"), sep = "__")
asd_microbiome_tidy <- asd_microbiome_longer %>%
separate(condition, into = c("condition", "patient_id"), sep = 1) %>%
separate(taxonomy, into = c("genus", "species"), sep = ";") %>%
separate(genus, into = c("trash", "genus"), sep = "__") %>%
separate(species, into = c("trash", "species"), sep = "__")
asd_microbiome_tidy
asd_microbiome_tidiest <- asd_microbiome_tidy %>%
select(-trash)
asd_microbiome_tidiest
asd_microbiome_tidy <- asd_microbiome_longer %>%
separate(condition, into = c("condition", "patient_id"), sep = 1) %>%
separate(taxonomy, into = c("genus", "species"), sep = ";") %>%
separate(species, into = c("trash", "species"), sep = " ") %>%
separate(genus, into = c("trash", "genus"), sep = "__") %>%
separate(species, into = c("trash", "species"), sep = "__")
asd_microbiome_tidy
asd_microbiome_tidy <- asd_microbiome_longer %>%
separate(condition, into = c("condition", "patient_id"), sep = 1) %>%
separate(taxonomy, into = c("genus", "species"), sep = ";") %>%
separate(species, into = c("species", "trash"), sep = " ") %>%
separate(genus, into = c("trash", "genus"), sep = "__") %>%
separate(species, into = c("trash", "species"), sep = "__")
asd_microbiome_tidy
asd_microbiome_tidy <- asd_microbiome_longer %>%
separate(condition, into = c("condition", "patient_id"), sep = 1) %>%
separate(taxonomy, into = c("genus", "species"), sep = ";") %>%
separate(species, into = c("trash", "species"), sep = " ") %>%
separate(genus, into = c("trash", "genus"), sep = "__") %>%
separate(species, into = c("trash", "species"), sep = "__")
asd_microbiome_tidy
asd_microbiome_tidy <- asd_microbiome_longer %>%
separate(condition, into = c("condition", "patient_id"), sep = 1) %>%
separate(taxonomy, into = c("genus", "species"), sep = ";") %>%
separate(species, into = c("trash", "species"), sep = "_") %>%
separate(genus, into = c("trash", "genus"), sep = "__") %>%
separate(species, into = c("trash", "species"), sep = "__")
asd_microbiome_tidy
asd_microbiome_tidy <- asd_microbiome_longer %>%
separate(condition, into = c("condition", "patient_id"), sep = 1) %>%
separate(taxonomy, into = c("genus", "species"), sep = ";") %>%
separate(species, into = c("trash", "species"), sep = " ") %>%
separate(genus, into = c("trash", "genus"), sep = "__") %>%
separate(species, into = c("trash", "species"), sep = "__")
asd_microbiome_tidy <- asd_microbiome_longer %>%
separate(condition, into = c("condition", "patient_id"), sep = 1) %>%
separate(taxonomy, into = c("trash", "species"), sep = "s__") %>%
separate(species, into = c("genus", "species"), sep = " ")
#separate(genus, into = c("trash", "genus"), sep = "__") %>%
#separate(species, into = c("trash", "species"), sep = "__")
asd_microbiome_tidy
view(asd_microbiome_tidy)
asd_microbiome_longer <- asd_microbiome %>%
pivot_longer(-taxonomy, names_to = "condition", values_to = "abundance")%>%
filter(str_detect(Taxonomy, "Unclassified") == FALSE)
asd_microbiome_longer <- asd_microbiome %>%
pivot_longer(-taxonomy, names_to = "condition", values_to = "abundance")%>%
filter(str_detect(taxonomy, "Unclassified") == FALSE)
asd_microbiome_tidy <- asd_microbiome_longer %>%
separate(condition, into = c("condition", "patient_id"), sep = 1) %>%
separate(taxonomy, into = c("trash", "species"), sep = "s__") %>%
separate(species, into = c("genus", "species"), sep = " ")
#separate(genus, into = c("trash", "genus"), sep = "__") %>%
#separate(species, into = c("trash", "species"), sep = "__")
asd_microbiome_tidy
view(asd_microbiome_tidy)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
asd <- readr::read_csv("ASD_meta_abundance_2.csv")
asd
asd_tidy <- asd %>%
pivot_longer(-Taxonomy,
names_to = "subject",
values_to = "abundance") %>%
separate(subject, into = c("group", "number"), sep = 1)
asd_tidy
asd_tidy2 <- asd_tidy %>%
filter(str_detect(Taxonomy, "Unclassified") == FALSE)
asd_tidy2
asd_tidy3 <-
asd_tidy2 %>%
separate(Taxonomy, into = c("genus", "species"), sep = ";")
asd_tidy4 <-
asd_tidy3 %>%
separate(genus, into = c("g", "genus"), sep = "__") %>%
separate(species, into = c("s", "species"), sep = "__") %>%
select( -g, -s)
asd_tidy4
asd_tidy4$genus <- as.factor(asd_tidy4$genus)
asd_tidy4$species <- as.factor(asd_tidy4$species)
asd_group <-
asd_tidy4 %>%
filter(group == "A")
asd_group
td_group <-
asd_tidy4 %>%
filter(group == "B")
td_group
td_group %>%
filter(abundance != 0) %>%
summarize(n_genus = n_distinct(genus), n_species = n_distinct(species))
asd_group %>%
filter(abundance != 0) %>%
summarize(n_genus = n_distinct(genus), n_species = n_distinct(species))
## Wrap-up
Please review the learning goals and be sure to use the code here as a reference when completing the homework.
-->[Home](https://jmledford3115.github.io/datascibiol/)
getwd()
## Exporting CSVs
```{r}
write.csv(asd_tidy4, "BIS15L_Project_Group11 \\ data \\ microbiome.csv", row.names = FALSE)
write.csv(asd_tidy4, "BIS15L_Project_Group11 / data / microbiome.csv", row.names = FALSE)
write.csv(asd_tidy4, file = "BIS15L_Project_Group11 / data / microbiome.csv", row.names = FALSE)
write.csv(asd_tidy4, file = "Desktop / BIS15L_Project_Group11 / data / microbiome.csv", row.names = FALSE)
write.csv(asd_tidy4, file = "Claire Chapman / Desktop / BIS15L_Project_Group11 / data / microbiome.csv", row.names = FALSE)
write.csv(asd_tidy4, file = "c:: User / Claire Chapman / Desktop / BIS15L_Project_Group11 / data / microbiome.csv", row.names = FALSE)
write.csv(asd_tidy4, file = "c::Claire Chapman / Desktop / BIS15L_Project_Group11 / data / microbiome.csv", row.names = FALSE)
write.csv(asd_tidy4, file = "microbiome.csv", row.names = FALSE)
write.csv(asd_group, file = "asd_group.csv", row.names = FALSE)
write.csv(td_group, file = "td_group.csv", row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
getwd()
getwd()
microbiome <- readr::read_csv(here("data", "microbiome.csv"))
microbiome <- readr::read_csv(here("tidy_data", "microbiome.csv"))
names(microbiome)
microbiome %>%
ggplot(aes(x = group)) %>%
geom_bar()
microbiome %>%
ggplot(aes(x = group)) +
geom_bar()
microbiome %>%
ggplot(aes(x = group)) +
geom_bar() +
scale_y_log10()
options(scipen=999)
microbiome %>%
ggplot(aes(x = group)) +
geom_bar()
microbiome %>%
summarise(a = count(group = "a"), b = count(group = "b"))
microbiome %>%
table(group)
microbiome %>%
table("group")
table(microbiome$group)
microbiome %>%
summary(n_distinct(genera))
microbiome %>%
summary(n_distinct(genera))
microbiome %>%
summarise(n_distinct(genera))
microbiome %>%
summarise(genera = n_distinct(genera))
microbiome %>%
summarise(genera = n_distinct(genus))
microbiome %>%
filter(group == "a") %>%
summarise(genera = n_distinct(genus))
microbiome %>%
select(group, genus) %>%
filter(group == "a") %>%
summarise(genera = n_distinct(genus))
microbiome %>%
select(group, genus) %>%
filter(group == "A") %>%
summarise(genera = n_distinct(genus))
microbiome %>%
select(group, genus) %>%
filter(group == "B") %>%
summarise(genera = n_distinct(genus))
microbiome %>%
select(group, genus) %>%
filter(group == "B", abundance > 1000) %>%
summarise(genera = n_distinct(genus))
