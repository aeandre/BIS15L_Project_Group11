knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
asd <- readr::read_csv("ASD_meta_abundance_2.csv")
asd
asd_tidy <- asd %>%
pivot_longer(-Taxonomy,
names_to = "subject",
values_to = "abundance") %>%
separate(subject, into = c("group", "number"), sep = 1)
asd_tidy
asd_tidy2 <- asd_tidy %>%
filter(str_detect(Taxonomy, "Unclassified") == FALSE)
asd_tidy2
asd_group <-
asd_tidy2 %>%
filter(group == "A")
asd_group
td_group <-
asd_tidy2 %>%
filter(group == "B")
td_group
knitr::opts_chunk$set(echo = TRUE)
getwd()
library(tidyverse)
library(janitor)
library(here)
library(naniar)
asd_microbiome <- read_csv(here("ASD meta abundance 2.csv"))
asd_microbiome <- janitor::clean_names(asd_microbiome)
names(asd_microbiome)
asd_microbiome
asd_microbiome_longer <- asd_microbiome %>%
pivot_longer(-taxonomy, names_to = "condition", values_to = "abundance")
asd_microbiome_longer
asd_microbiome_tidy <- asd_microbiome_longer %>%
separate(condition, into = c("condition", "patient_id"), sep = 1) %>%
separate(taxonomy, into = c("genus", "species"), sep = ";") %>%
separate(genus, into = c("trash", "genus"), sep = "__")
asd_microbiome_tidy <- asd_microbiome_longer %>%
separate(condition, into = c("condition", "patient_id"), sep = 1) %>%
separate(taxonomy, into = c("genus", "species"), sep = ";") %>%
separate(genus, into = c("trash", "genus"), sep = "__") %>%
separate(species, into = c("trash", "species"), sep = "__")
asd_microbiome_tidy
asd_microbiome_tidiest <- asd_microbiome_tidy %>%
select(-trash)
asd_microbiome_tidiest
asd_microbiome_tidy <- asd_microbiome_longer %>%
separate(condition, into = c("condition", "patient_id"), sep = 1) %>%
separate(taxonomy, into = c("genus", "species"), sep = ";") %>%
separate(species, into = c("trash", "species"), sep = " ") %>%
separate(genus, into = c("trash", "genus"), sep = "__") %>%
separate(species, into = c("trash", "species"), sep = "__")
asd_microbiome_tidy
asd_microbiome_tidy <- asd_microbiome_longer %>%
separate(condition, into = c("condition", "patient_id"), sep = 1) %>%
separate(taxonomy, into = c("genus", "species"), sep = ";") %>%
separate(species, into = c("species", "trash"), sep = " ") %>%
separate(genus, into = c("trash", "genus"), sep = "__") %>%
separate(species, into = c("trash", "species"), sep = "__")
asd_microbiome_tidy
asd_microbiome_tidy <- asd_microbiome_longer %>%
separate(condition, into = c("condition", "patient_id"), sep = 1) %>%
separate(taxonomy, into = c("genus", "species"), sep = ";") %>%
separate(species, into = c("trash", "species"), sep = " ") %>%
separate(genus, into = c("trash", "genus"), sep = "__") %>%
separate(species, into = c("trash", "species"), sep = "__")
asd_microbiome_tidy
asd_microbiome_tidy <- asd_microbiome_longer %>%
separate(condition, into = c("condition", "patient_id"), sep = 1) %>%
separate(taxonomy, into = c("genus", "species"), sep = ";") %>%
separate(species, into = c("trash", "species"), sep = "_") %>%
separate(genus, into = c("trash", "genus"), sep = "__") %>%
separate(species, into = c("trash", "species"), sep = "__")
asd_microbiome_tidy
asd_microbiome_tidy <- asd_microbiome_longer %>%
separate(condition, into = c("condition", "patient_id"), sep = 1) %>%
separate(taxonomy, into = c("genus", "species"), sep = ";") %>%
separate(species, into = c("trash", "species"), sep = " ") %>%
separate(genus, into = c("trash", "genus"), sep = "__") %>%
separate(species, into = c("trash", "species"), sep = "__")
asd_microbiome_tidy <- asd_microbiome_longer %>%
separate(condition, into = c("condition", "patient_id"), sep = 1) %>%
separate(taxonomy, into = c("trash", "species"), sep = "s__") %>%
separate(species, into = c("genus", "species"), sep = " ")
#separate(genus, into = c("trash", "genus"), sep = "__") %>%
#separate(species, into = c("trash", "species"), sep = "__")
asd_microbiome_tidy
view(asd_microbiome_tidy)
asd_microbiome_longer <- asd_microbiome %>%
pivot_longer(-taxonomy, names_to = "condition", values_to = "abundance")%>%
filter(str_detect(Taxonomy, "Unclassified") == FALSE)
asd_microbiome_longer <- asd_microbiome %>%
pivot_longer(-taxonomy, names_to = "condition", values_to = "abundance")%>%
filter(str_detect(taxonomy, "Unclassified") == FALSE)
asd_microbiome_tidy <- asd_microbiome_longer %>%
separate(condition, into = c("condition", "patient_id"), sep = 1) %>%
separate(taxonomy, into = c("trash", "species"), sep = "s__") %>%
separate(species, into = c("genus", "species"), sep = " ")
#separate(genus, into = c("trash", "genus"), sep = "__") %>%
#separate(species, into = c("trash", "species"), sep = "__")
asd_microbiome_tidy
view(asd_microbiome_tidy)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
asd <- readr::read_csv("ASD_meta_abundance_2.csv")
asd
asd_tidy <- asd %>%
pivot_longer(-Taxonomy,
names_to = "subject",
values_to = "abundance") %>%
separate(subject, into = c("group", "number"), sep = 1)
asd_tidy
asd_tidy2 <- asd_tidy %>%
filter(str_detect(Taxonomy, "Unclassified") == FALSE)
asd_tidy2
asd_tidy3 <-
asd_tidy2 %>%
separate(Taxonomy, into = c("genus", "species"), sep = ";")
asd_tidy4 <-
asd_tidy3 %>%
separate(genus, into = c("g", "genus"), sep = "__") %>%
separate(species, into = c("s", "species"), sep = "__") %>%
select( -g, -s)
asd_tidy4
asd_tidy4$genus <- as.factor(asd_tidy4$genus)
asd_tidy4$species <- as.factor(asd_tidy4$species)
asd_group <-
asd_tidy4 %>%
filter(group == "A")
asd_group
td_group <-
asd_tidy4 %>%
filter(group == "B")
td_group
td_group %>%
filter(abundance != 0) %>%
summarize(n_genus = n_distinct(genus), n_species = n_distinct(species))
asd_group %>%
filter(abundance != 0) %>%
summarize(n_genus = n_distinct(genus), n_species = n_distinct(species))
## Wrap-up
Please review the learning goals and be sure to use the code here as a reference when completing the homework.
-->[Home](https://jmledford3115.github.io/datascibiol/)
getwd()
## Exporting CSVs
```{r}
write.csv(asd_tidy4, "BIS15L_Project_Group11 \\ data \\ microbiome.csv", row.names = FALSE)
write.csv(asd_tidy4, "BIS15L_Project_Group11 / data / microbiome.csv", row.names = FALSE)
write.csv(asd_tidy4, file = "BIS15L_Project_Group11 / data / microbiome.csv", row.names = FALSE)
write.csv(asd_tidy4, file = "Desktop / BIS15L_Project_Group11 / data / microbiome.csv", row.names = FALSE)
write.csv(asd_tidy4, file = "Claire Chapman / Desktop / BIS15L_Project_Group11 / data / microbiome.csv", row.names = FALSE)
write.csv(asd_tidy4, file = "c:: User / Claire Chapman / Desktop / BIS15L_Project_Group11 / data / microbiome.csv", row.names = FALSE)
write.csv(asd_tidy4, file = "c::Claire Chapman / Desktop / BIS15L_Project_Group11 / data / microbiome.csv", row.names = FALSE)
write.csv(asd_tidy4, file = "microbiome.csv", row.names = FALSE)
write.csv(asd_group, file = "asd_group.csv", row.names = FALSE)
write.csv(td_group, file = "td_group.csv", row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
getwd()
getwd()
microbiome <- readr::read_csv(here("data", "microbiome.csv"))
microbiome <- readr::read_csv(here("tidy_data", "microbiome.csv"))
names(microbiome)
microbiome %>%
ggplot(aes(x = group)) %>%
geom_bar()
microbiome %>%
ggplot(aes(x = group)) +
geom_bar()
microbiome %>%
ggplot(aes(x = group)) +
geom_bar() +
scale_y_log10()
options(scipen=999)
microbiome %>%
ggplot(aes(x = group)) +
geom_bar()
microbiome %>%
summarise(a = count(group = "a"), b = count(group = "b"))
microbiome %>%
table(group)
microbiome %>%
table("group")
table(microbiome$group)
microbiome %>%
summary(n_distinct(genera))
microbiome %>%
summary(n_distinct(genera))
microbiome %>%
summarise(n_distinct(genera))
microbiome %>%
summarise(genera = n_distinct(genera))
microbiome %>%
summarise(genera = n_distinct(genus))
microbiome %>%
filter(group == "a") %>%
summarise(genera = n_distinct(genus))
microbiome %>%
select(group, genus) %>%
filter(group == "a") %>%
summarise(genera = n_distinct(genus))
microbiome %>%
select(group, genus) %>%
filter(group == "A") %>%
summarise(genera = n_distinct(genus))
microbiome %>%
select(group, genus) %>%
filter(group == "B") %>%
summarise(genera = n_distinct(genus))
microbiome %>%
select(group, genus) %>%
filter(group == "B", abundance > 1000) %>%
summarise(genera = n_distinct(genus))
knitr::opts_chunk$set(echo = TRUE)
unique_age <- c("Younger", "Older")
unique_counts3 <- c(359, 11)
unique_age <- data_frame(unique_age, unique_counts3)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(ggvenn)
library(VennDiagram)
unique_age <- c("Younger", "Older")
unique_counts3 <- c(359, 11)
unique_age <- data_frame(unique_age, unique_counts3)
unique_age
unique_age %>%
ggplot(aes(x = unique_age, y = unique_counts3, fill = unique_age)) +
geom_col(color = "black") +
scale_fill_manual(values = c("turquoise1", "yellow")) +
theme_linedraw() +
labs(title = "Number of Unique Genera Per Age Group",
x = NULL,
y = "Unique Genera ") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
unique_gender <- c("Male", "Female")
unique_counts4 <- c(652, 1)
unique_gender <- data_frame(unique_gender, unique_counts4)
unique_gender
unique_gender %>%
ggplot(aes(x = unique_gender, y = unique_counts4, fill = unique_gender)) +
geom_col(color = "black") +
scale_fill_manual(values = c("turquoise1", "yellow")) +
theme_linedraw() +
labs(title = "Number of Unique Genera by Sex",
x = NULL,
y = "Unique Genera ") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
unique_gender %>%
ggplot(aes(x = unique_gender, y = unique_counts4, fill = unique_gender)) +
geom_col(color = "black") +
scale_fill_manual(values = c("darkred", "darkskyblue4")) +
theme_linedraw() +
labs(title = "Number of Unique Genera by Sex",
x = NULL,
y = "Unique Genera ") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
unique_gender %>%
ggplot(aes(x = unique_gender, y = unique_counts4, fill = unique_gender)) +
geom_col(color = "black") +
scale_fill_manual(values = c("darkred", "skyblue4")) +
theme_linedraw() +
labs(title = "Number of Unique Genera by Sex",
x = NULL,
y = "Unique Genera ") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
draw.pairwise.venn(area1 = 652+643,
area2 = 644,
cross.area = 643,
fill = c("darkred", "darkskyblue4"),
category = c("Male Genera", "Female Genera"))
draw.pairwise.venn(area1 = 652+643,
area2 = 644,
cross.area = 643,
fill = c("darkred", "skyblue4"),
category = c("Male Genera", "Female Genera"))
grid.newpage()
draw.pairwise.venn(area1 = 652+643,
area2 = 644,
cross.area = 643,
fill = c("darkred", "skyblue4"),
category = c("Male Genera", "Female Genera"))
ggvenn(demo_venn_data, fill_color = c("darkred", "skyblue4"))
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(ggvenn)
library(VennDiagram)
tidier_microbiome <- readr::read_csv("tidiermicrobiome.csv")
tidier_microbiome
asd_tidier <- readr::read_csv("asd_group_tidier.csv")
asd_tidier
td_tidier <- readr::read_csv("td_group_tidier.csv")
td_tidier
td_venn <-
td_tidier %>%
rename(genus_td = "genus") %>%
filter(abundance != 0) %>%
select(genus_td, patient_id)
asd_venn <-
asd_tidier %>%
rename(genus_asd = "genus") %>%
filter(abundance != 0)
both_venn <- full_join(td_venn, asd_venn, by = "patient_id")
both_venn
both_venn$genus_td <- as.factor(both_venn$genus_td)
both_venn$genus_asd <- as.factor(both_venn$genus_asd)
both_venn2 <-
both_venn %>%
filter(genus_td != "NA" | genus_asd != "NA")
venn_data <- list(
"TD Genera" = both_venn2$genus_td,
"ASD Genera" = both_venn2$genus_asd
)
ggvenn(venn_data, fill_color = c("darkred", "skyblue4"))
anyNA(venn_data)
grid.newpage()
draw.pairwise.venn(area1 = 1264,
area2 = 1101,
cross.area = 1068,
fill = c("darkred", "skyblue4"),
category = c("TD Genera", "ASD Genera"))
unique_names <- c("TD group", "ASD Group")
unique_counts <- c(196, 33)
unique_genera <- data_frame(unique_names, unique_counts)
unique_genera
unique_genera %>%
ggplot(aes(x = unique_names, y = unique_counts, fill = unique_names)) +
geom_col(color = "black") +
scale_fill_manual(values = c("darkred", "skyblue4")) +
theme_linedraw() +
labs(title = "Number of Unique Genera Per Group",
x = NULL,
y = "Unique Genera") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
both_venn$condition <- str_to_upper(both_venn$condition, locale = "en")
